{"apiVersion":"1.0.0","swaggerVersion":"1.2","basePath":"https://rest.ehrscape.com/rest/v1","resourcePath":"/demographics","apis":[{"path":"/demographics/party/{partyId}","operations":[{"method":"GET","summary":"Retrieves the demographics info for the specified party.","notes":"<p>This method contacts the remote demographics service and returns a JSON description of the party (specified by the partyId path parameter) in whichever format the service provides, along with some meta-data.</p><p>A note about domains: all demographics operations take place within the requesting user's default domain. This means that the user can only query for and add parties that are in his default domain. If the user has no default domain set, a 400 Bad Request (DEMO-6088) error will be thrown.</p><p>Example of a successful response:</p><p><pre style=\"overflow-y: auto\"><code>{\n  \"meta\": {\n    \"href\": \"http://localhost:8082/rest/v1/demographics/party/1\"\n  },\n  \"action\": \"RETRIEVE\",\n  \"party\": {\n    \"id\": \"1\",\n    \"version\": 0,\n    \"firstNames\": \"Bruce\",\n    \"lastNames\": \"Wayne\",\n    \"gender\": \"MALE\",\n    \"dateOfBirth\": \"2014-03-03T15:04:24.456Z\",\n    \"address\": {\n      \"id\": \"1\",\n      \"version\": 0,\n      \"address\": \"Fake Street 15, Gotham City\"\n    },\n    \"partyAdditionalInfo\": [\n      {\n        \"id\": \"5\",\n        \"version\": 0,\n        \"key\": \"contact_info_hidden\",\n        \"value\": \"yes\"\n      },\n      {\n        \"id\": \"6\",\n        \"version\": 0,\n        \"key\": \"title\",\n        \"value\": \"Mr\"\n      },\n      {\n        \"id\": \"7\",\n        \"version\": 0,\n        \"key\": \"insurance_level\",\n        \"value\": \"9\"\n      }\n    ]\n  }\n}</pre></code></p>","type":"PartyResponseData","nickname":"getParty","produces":["application/json"],"parameters":[{"name":"partyId","description":"The external ID of the party to retrieve.","required":true,"type":"string","paramType":"path","allowMultiple":false},{"name":"when","description":"The instant of time for which to return the information about the party in the ISO-8601 format (2014-03-03T15:05:43.992Z).","required":false,"type":"string","format":"date-time","paramType":"query","allowMultiple":false}],"responseMessages":[{"code":200,"message":"Success - returns the JSON containing party description."},{"code":400,"message":"Bad Request - no domain could be determined for the user (DEMO-6088)."},{"code":401,"message":"Unauthenticated - could not authenticate user (SYS-9401)."},{"code":403,"message":"Forbidden - the user does not have the required permissions to execute this request (SYS-9403)."},{"code":404,"message":"Not found - party does not exist (DEMO-6021)."},{"code":503,"message":"Service unavailable - could not connect to the remote demographics service."}]},{"method":"DELETE","summary":"Deletes a party record from the remote demographics store.","notes":"<div class=\"ehr-rest-summary\"><p>This method deletes a party denoted by its id from the remote demographics store, along with all its sub-entities (such as additional info).</p></div><p>Successful response:</p><pre style=\"overflow-y: auto\"><code>{\n  \"action\": \"DELETE\"\n}</pre></code></p><p>A note about domains: all demographics operations take place within the requesting user's default domain. This means that the user can only query for and add parties that are in his default domain. If the user has no default domain set, a 400 Bad Request (DEMO-6088) error will be thrown.</p>","type":"DemographicsResponseData","nickname":"deleteParty","produces":["application/json"],"parameters":[{"name":"partyId","description":"The id of the party to delete.","required":true,"type":"string","paramType":"path","allowMultiple":false}],"responseMessages":[{"code":200,"message":"Success - party successfully deleted."},{"code":400,"message":"Bad request - no domain could be determined for the user (DEMO-6088)."},{"code":401,"message":"Unauthenticated - could not authenticate user (SYS-9401)."},{"code":403,"message":"Forbidden - the user does not have the required permissions to execute this request (SYS-9403)."},{"code":404,"message":"Not found - the specified party was not found (DEMO-6021)."},{"code":503,"message":"Service unavailable - could not connect to the remote demographics service."}]}]},{"path":"/demographics/ehr/{ehrId}/party","operations":[{"method":"GET","summary":"Retrieves the demographics info for the specified party.","notes":"<p>This method contacts the remote demographics service and returns a JSON description of the party (specified by the partyId path parameter) in whichever format the service provides, along with some meta-data.</p><p>A note about domains: all demographics operations take place within the requesting user's default domain. This means that the user can only query for and add parties that are in his default domain. If the user has no default domain set, a 400 Bad Request (DEMO-6088) error will be thrown.</p><p>Example of a successful response:</p><p><pre style=\"overflow-y: auto\"><code>{\n  \"meta\": {\n    \"href\": \"http://localhost:8082/rest/v1/demographics/ehr/89e610ee-aed2-41fb-9a70-8d30631bdaec/party\"\n  },\n  \"action\": \"RETRIEVE\",\n  \"party\": {\n    \"id\": \"1\",\n    \"version\": 0,\n    \"firstNames\": \"Bruce\",\n    \"lastNames\": \"Wayne\",\n    \"gender\": \"MALE\",\n    \"dateOfBirth\": \"2014-03-03T15:04:24.456Z\",\n    \"address\": {\n      \"id\": \"1\",\n      \"version\": 0,\n      \"address\": \"Fake Street 15, Gotham City\"\n    },\n    \"partyAdditionalInfo\": [\n      {\n        \"id\": \"5\",\n        \"version\": 0,\n        \"key\": \"contact_info_hidden\",\n        \"value\": \"yes\"\n      },\n      {\n        \"id\": \"6\",\n        \"version\": 0,\n        \"key\": \"title\",\n        \"value\": \"Mr\"\n      },\n      {\n        \"id\": \"7\",\n        \"version\": 0,\n        \"key\": \"insurance_level\",\n        \"value\": \"9\"\n      }\n    ]\n  }\n}</pre></code></p>","type":"PartyResponseData","nickname":"getPartyByEhrId","produces":["application/json"],"parameters":[{"name":"ehrId","description":"EHR ID of the party to retrieve.","required":true,"type":"string","paramType":"path","allowMultiple":false},{"name":"when","description":"The instant of time for which to return the information about the party in the ISO-8601 format (2014-03-03T15:05:43.992Z).","required":false,"type":"string","format":"date-time","paramType":"query","allowMultiple":false}],"responseMessages":[{"code":200,"message":"Success - returns the JSON containing party description."},{"code":400,"message":"Bad Request - no domain could be determined for the user (DEMO-6088)."},{"code":401,"message":"Unauthenticated - could not authenticate user (SYS-9401)."},{"code":403,"message":"Forbidden - the user does not have the required permissions to execute this request (SYS-9403)."},{"code":404,"message":"Not found - party does not exist (DEMO-6021)."},{"code":503,"message":"Service unavailable - could not connect to the remote demographics service."}]}]},{"path":"/demographics/party","operations":[{"method":"POST","summary":"Creates a new party record in the remote demographics store.","notes":"<p>This method saves a new party, specified in the JSON request body, to the remote demographics service.</p>The JSON request body has to be in the format that the remote demographics service understands. <p>Quick specification of what the default party object looks like:</p><pre style=\"overflow-y: auto\"><code>{\n    \"firstNames\": \"string\",\n    \"lastNames\": \"string\",\n    \"gender\": \"MALE|FEMALE|UNKNOWN|OTHER\",\n    \"dateOfBirth\": \"ISO-8601 timestamp (including time portion)\",\n    \"timeOfDeath\": \"ISO-8601 timestamp (including time portion)\",\n    \"address\": {      \n      \"address\": \"string\"\n    },\n    \"partyAdditionalInfo (arbitrary collection of key-value pairs)\": [\n            {\n        \"key\": \"key1\",\n        \"value\": \"value1\"\n      },\n      {\n        \"key\": \"key1\",\n        \"value\": \"value1\"\n      }      \n    ]\n  }</pre></code></p><p>None of the properties are required, but if you do specify any partyAdditionalInfo elements, the key has to be set. The return JSON format looks the same, but it will have the identity properties set for elements (id and version). If you send these in this method call, they are ignored.</p><p>A request body should look something like this:</p><pre style=\"overflow-y: auto\"><code>{\n    \"firstNames\": \"Jordan\",\n    \"lastNames\": \"Nolan\",\n    \"gender\": \"MALE\",\n    \"dateOfBirth\": \"1990-03-09T00:00:00.000Z\",\n    \"address\": {      \n      \"address\": \"Toronto, Canada\"\n    },\n    \"partyAdditionalInfo\": [\n      {\n        \"key\": \"pet\",\n        \"value\": \"dog\"\n      },\n      {\n        \"key\": \"title\",\n        \"value\": \"Mr\"\n      }      \n    ]\n  }</pre></code></p><p>Successful response:</p><pre style=\"overflow-y: auto\"><code>{\n  \"meta\": {\n    \"href\": \"http://localhost:8082/rest/v1/demographics/party/16\"\n  },\n  \"action\": \"CREATE\"\n}</pre></code></p><p>A note about domains: all demographics operations take place within the requesting user's default domain. This means that the user can only query for and add parties that are in his default domain. If the user has no default domain set, a 400 Bad Request (DEMO-6088) error will be thrown.</p>","type":"DemographicsResponseData","nickname":"addParty","produces":["application/json"],"consumes":["application/json"],"parameters":[{"name":"body","description":"The party to create in whatever format the demographics service supports.","required":true,"type":"string","paramType":"body","allowMultiple":false}],"responseMessages":[{"code":201,"message":"Success - party record created."},{"code":400,"message":"Bad request - the service could not parse the party JSON (DEMO-6041), missing party additional info keys (DEMO-6042),  no domain could be determined for the user (DEMO-6088)."},{"code":401,"message":"Unauthenticated - could not authenticate user (SYS-9401)."},{"code":403,"message":"Forbidden - the user does not have the required permissions to execute this request (SYS-9403)."},{"code":503,"message":"Service unavailable - could not connect to the remote demographics service."}]},{"method":"PUT","summary":"Updates a party record in the remote demographics store.","notes":"<div class=\"ehr-rest-summary\"><p>This method updates a party, specified in the JSON request body.</p></div><p>The JSON request body has to be in the format that the remote demographics service understands. See the documentation for party POST to see a description of the format.</p><p>Successful response:</p><pre style=\"overflow-y: auto\"><code>{\n  \"meta\": {\n    \"href\": \"http://localhost:8082/rest/v1/demographics/party/16\"\n  },\n  \"action\": \"UPDATE\"\n}</pre></code></p><p>A note about domains: all demographics operations take place within the requesting user's default domain. This means that the user can only query for and add parties that are in his default domain. If the user has no default domain set, a 400 Bad Request (DEMO-6088) error will be thrown.</p>","type":"DemographicsResponseData","nickname":"updateParty","produces":["application/json"],"consumes":["application/json"],"parameters":[{"name":"body","description":"The party to update.","required":true,"type":"string","paramType":"body","allowMultiple":false}],"responseMessages":[{"code":200,"message":"Success - party updated or else it was determined that no update was necessary."},{"code":400,"message":"Bad request - the service could not parse the party JSON (DEMO-6041), missing party additional info keys (DEMO-6042),  no domain could be determined for the user (DEMO-6088)."},{"code":401,"message":"Unauthenticated - could not authenticate user (SYS-9401)."},{"code":403,"message":"Forbidden - the user does not have the required permissions to execute this request (SYS-9403)."},{"code":404,"message":"Not found - the specified party or one of its sub-entities (such as additional info) was not found (DEMO-6021)."},{"code":409,"message":"Conflict - the record has already been updated by another transaction - optimistic locking exception (SYS-9409)."},{"code":503,"message":"Service unavailable - could not connect to the remote demographics service."}]}]},{"path":"/demographics/party/query","operations":[{"method":"GET","summary":"Queries the demographics store for matching parties, with the query parameters specified in the URL.","notes":"<div class=\"ehr-rest-summary\"><p>This method queries the demographics store for matching parties, with key1=value1&key2=value2 URL parameters serving as the query parameters.</p></div><p>The special query parameter <code>search</code> will perform an OR-search on both the firstNames and the lastNames property of the party.</p><p>A case-insensitive search will be performed for matching keys and values.</p><p>Please note that all properties whose key names start with date or time are considered to be ISO-8601 timestamps (1980-04-12T00:00:00.000Z) and will be attempted to be parsed as such. Failure to parse such criteria will result in a 400 Bad Request error.</p><p>An example of complex search criteria:</p><pre style=\"overflow-y: auto\"><code>.../demographics/party/query/?firstNames=*Bruce*&dateOfBirth=1980-04-12T00:00:00.000Z&gender=MALE&insuranceLevel=5</pre></code></p><p>This will find all parties whose first names include Bruce that have been born on the 12th of April, 1980, are male and have the additional property insuranceLevel set to 9.</p><p>For string based values, the * character can be used to indicate wildcard-matching behavior.</p><p>An example of a successful response body:</p><pre style=\"overflow-y: auto\"><code>{\n  \"meta\": {\n    \"href\": \"http://localhost:8082/rest/v1/demographics/party/query/?lastNames=*Way*\"\n  },\n  \"action\": \"RETRIEVE\",\n  \"parties\": [\n    {\n      \"id\": \"1\",\n      \"version\": 0,\n      \"firstNames\": \"Bruce\",\n      \"lastNames\": \"Wayne\",\n      \"gender\": \"MALE\",\n      \"dateOfBirth\": \"2014-03-03T15:04:24.456Z\",\n      \"address\": {\n        \"id\": \"1\",\n        \"version\": 0,\n        \"address\": \"Fake Street 15, Gotham City\"\n      },\n      \"partyAdditionalInfo\": [\n        {\n          \"id\": \"7\",\n          \"version\": 0,\n          \"key\": \"insurance_level\",\n          \"value\": \"9\"\n        },\n        {\n          \"id\": \"6\",\n          \"version\": 0,\n          \"key\": \"title\",\n          \"value\": \"Mr\"\n        },\n        {\n          \"id\": \"5\",\n          \"version\": 0,\n          \"key\": \"contact_info_hidden\",\n          \"value\": \"yes\"\n        }\n      ]\n    },\n    {\n      \"id\": \"9\",\n      \"version\": 0,\n      \"firstNames\": \"Selina\",\n      \"lastNames\": \"Wayne\",\n      \"gender\": \"FEMALE\",\n      \"dateOfBirth\": \"1980-03-03T15:04:24.456Z\",\n      \"address\": {\n        \"id\": \"9\",\n        \"version\": 0,\n        \"address\": \"Fake Street 19, Gotham City\"\n      },\n      \"partyAdditionalInfo\": [\n        {\n          \"id\": \"15\",\n          \"version\": 0,\n          \"key\": \"title\",\n          \"value\": \"Mrs\"\n        },\n        {\n          \"id\": \"16\",\n          \"version\": 0,\n          \"key\": \"insurance_level\",\n          \"value\": \"10\"\n        },\n        {\n          \"id\": \"10\",\n          \"version\": 0,\n          \"key\": \"contact_info_hidden\",\n          \"value\": \"no\"\n        }\n      ]\n    }\n  ]\n}</pre></code></p><p>A note about domains: all demographics operations take place within the requesting user's default domain. This means that the user can only query for and add parties that are in his default domain. If the user has no default domain set, a 400 Bad Request (DEMO-6088) error will be thrown.</p>","type":"PartiesResponseData","nickname":"queryParties","produces":["application/json"],"parameters":[{"name":"maxHits","description":"Limit the query results to this many hits.","required":false,"type":"integer","format":"int32","paramType":"query","allowMultiple":false},{"name":"parameters","description":"Query parameters in the key1=value1&key2=value2 format","required":false,"type":"string","paramType":"query","allowMultiple":false}],"responseMessages":[{"code":200,"message":"Success - query successfully executed and result returned."},{"code":204,"message":"No content - query produced no results."},{"code":400,"message":"Bad request - no query criteria specified (DEMO-6150), could not parse parameters (DEMO-6151),  no domain could be determined for the user (DEMO-6088), could not parse request JSON."},{"code":401,"message":"Unauthenticated - could not authenticate user (SYS-9401)."},{"code":403,"message":"Forbidden - the user does not have the required permissions to execute this request (SYS-9403)."},{"code":503,"message":"Service unavailable - could not connect to the remote demographics service."}]},{"method":"POST","summary":"Queries the demographics store for matching parties.","notes":"<div class=\"ehr-rest-summary\"><p>This method queries the demographics store for matching parties, using a JSON array of key-value arguments as the search criteria.</p></div><p>The JSON request body is an array of key-value search criteria that are then used as the WHERE clause of the SQL query (a conjunction (AND) of the individual key-value pairs will be used to produce the WHERE clause).</p><p>The format of the restriction clause:</p><pre style=\"overflow-y: auto\"><code>{\n    \"key\": \"string\",\n    \"value\": \"string\"\n}</pre></code></p><p>The special key <code>search</code> will perform an OR-search on both the firstNames and the lastNames property of the party.</p><p>A case-insensitive search will be performed for matching keys and values.</p><p>Please note that all properties whose key names start with date or time are considered to be ISO-8601 timestamps (1980-04-12T00:00:00.000Z) and will be attempted to be parsed as such. Failure to parse such criteria will result in a 400 Bad Request error.</p><p>An example of complex search criteria:</p><pre style=\"overflow-y: auto\"><code>[\n   {\n    \"key\": \"firstNames\",\n    \"value\": \"*Bruce*\"\n   },\n   {\n    \"key\": \"dateOfBirth\",\n    \"value\": \"1980-04-12T00:00:00.000Z\"\n   },\n   {\n    \"key\": \"gender\",\n    \"value\": \"MALE\"\n   },\n   {\n    \"key\": \"insuranceLevel\",\n    \"value\": \"5\"\n   }\n]</pre></code></p><p>This will find all parties whose first names include Bruce that have been born on the 12th of April, 1980, are male and have the additional property insuranceLevel set to 9.</p><p>For string based values, the * character can be used to indicate wildcard-matching behavior.</p><p>An example of a successful response body:</p><pre style=\"overflow-y: auto\"><code>{\n  \"meta\": {\n    \"href\": \"http://localhost:8082/rest/v1/demographics/party/query/?lastNames=*Way*\"\n  },\n  \"action\": \"RETRIEVE\",\n  \"parties\": [\n    {\n      \"id\": \"1\",\n      \"version\": 0,\n      \"firstNames\": \"Bruce\",\n      \"lastNames\": \"Wayne\",\n      \"gender\": \"MALE\",\n      \"dateOfBirth\": \"2014-03-03T15:04:24.456Z\",\n      \"address\": {\n        \"id\": \"1\",\n        \"version\": 0,\n        \"address\": \"Fake Street 15, Gotham City\"\n      },\n      \"partyAdditionalInfo\": [\n        {\n          \"id\": \"7\",\n          \"version\": 0,\n          \"key\": \"insurance_level\",\n          \"value\": \"9\"\n        },\n        {\n          \"id\": \"6\",\n          \"version\": 0,\n          \"key\": \"title\",\n          \"value\": \"Mr\"\n        },\n        {\n          \"id\": \"5\",\n          \"version\": 0,\n          \"key\": \"contact_info_hidden\",\n          \"value\": \"yes\"\n        }\n      ]\n    },\n    {\n      \"id\": \"9\",\n      \"version\": 0,\n      \"firstNames\": \"Selina\",\n      \"lastNames\": \"Wayne\",\n      \"gender\": \"FEMALE\",\n      \"dateOfBirth\": \"1980-03-03T15:04:24.456Z\",\n      \"address\": {\n        \"id\": \"9\",\n        \"version\": 0,\n        \"address\": \"Fake Street 19, Gotham City\"\n      },\n      \"partyAdditionalInfo\": [\n        {\n          \"id\": \"15\",\n          \"version\": 0,\n          \"key\": \"title\",\n          \"value\": \"Mrs\"\n        },\n        {\n          \"id\": \"16\",\n          \"version\": 0,\n          \"key\": \"insurance_level\",\n          \"value\": \"10\"\n        },\n        {\n          \"id\": \"10\",\n          \"version\": 0,\n          \"key\": \"contact_info_hidden\",\n          \"value\": \"no\"\n        }\n      ]\n    }\n  ]\n}</pre></code></p><p>A note about domains: all demographics operations take place within the requesting user's default domain. This means that the user can only query for and add parties that are in his default domain. If the user has no default domain set, a 400 Bad Request (DEMO-6088) error will be thrown.</p>","type":"PartiesResponseData","nickname":"queryParties","produces":["application/json"],"consumes":["application/json"],"parameters":[{"name":"maxHits","description":"Limit the query results to this many hits.","required":false,"type":"integer","format":"int32","paramType":"query","allowMultiple":false},{"name":"body","description":"An array of key-value query criteria.","required":true,"type":"array","items":{"$ref":"SearchCriterion"},"paramType":"body","allowMultiple":false}],"responseMessages":[{"code":200,"message":"Success - query successfully executed and result returned."},{"code":204,"message":"No content - query produced no results."},{"code":400,"message":"Bad request - no query criteria specified (DEMO-6150), could not parse parameters (DEMO-6151),  no domain could be determined for the user (DEMO-6088), could not parse request JSON."},{"code":401,"message":"Unauthenticated - could not authenticate user (SYS-9401)."},{"code":403,"message":"Forbidden - the user does not have the required permissions to execute this request (SYS-9403)."},{"code":503,"message":"Service unavailable - could not connect to the remote demographics service."}]}]}],"models":{"Meta":{"id":"Meta","required":["href"],"properties":{"href":{"type":"string","description":"Link to the relevant resource"},"precedingHref":{"type":"string","description":"Link to the preceding resource, if applicable"},"nextHref":{"type":"string","description":"Link to the next resource, if applicable"}}},"DateTime":{"id":"DateTime","required":["value"],"properties":{"value":{"$ref":"date-time","description":"Date and time value in ISO-8601 format (2014-03-03T15:05:43.992Z)"}}},"SearchCriterion":{"id":"SearchCriterion","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"DemographicsResponseData":{"id":"DemographicsResponseData","description":"Returned whenever the response is a demographics entity, such as a party.","required":["action"],"properties":{"meta":{"$ref":"Meta","description":"REST meta-data, such as the link to a resource"},"action":{"$ref":"RestActionType","description":"Returns what kind of action was performed as a result of the REST request","enum":["RETRIEVE","CREATE","UPDATE","MERGE","DELETE","EXECUTE","NOOP"]}}},"JsonNode":{"id":"JsonNode","properties":{"value":{"$ref":"JSON","description":"An appropriate JSON representation of the object"}}},"PartiesResponseData":{"id":"PartiesResponseData","description":"Returned whenever the response is a collection of parties.","required":["action","parties"],"properties":{"dataEmpty":{"type":"boolean"},"meta":{"$ref":"Meta","description":"REST meta-data, such as the link to a resource"},"action":{"$ref":"RestActionType","description":"Returns what kind of action was performed as a result of the REST request","enum":["RETRIEVE","CREATE","UPDATE","MERGE","DELETE","EXECUTE","NOOP"]},"parties":{"type":"array","description":"The collection of party descriptions","items":{"$ref":"JsonNode"}}}},"PartyResponseData":{"id":"PartyResponseData","description":"Returned whenever the response is a single party.","required":["action","party"],"properties":{"meta":{"$ref":"Meta","description":"REST meta-data, such as the link to a resource"},"action":{"$ref":"RestActionType","description":"Returns what kind of action was performed as a result of the REST request","enum":["RETRIEVE","CREATE","UPDATE","MERGE","DELETE","EXECUTE","NOOP"]},"party":{"$ref":"JsonNode","description":"The party description"}}}}}